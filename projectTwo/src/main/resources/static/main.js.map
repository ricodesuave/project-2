{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/user-post/user-post.component.css","webpack:///./src/app/components/user-post/user-post.component.html","webpack:///./src/app/components/user-post/user-post.component.ts","webpack:///./src/app/services/reviews/reviews.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserPostComponent } from './components/user-post/user-post.component';\n\nconst routes: Routes = [\n  {path: 'posts', component: UserPostComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- \\n\\n<router-outlet></router-outlet> -->\\n<app-navbar></app-navbar>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card bg-dark my-5\\\">\\n        <div class=\\\"card-body\\\">\\n            <ul class=\\\"text-center list-inline py-3\\\">\\n            <li class=\\\"list-inline-item\\\"><a routerLink=\\\"/posts\\\" class=\\\"btn btn-info\\\">List Reviews</a></li>\\n            </ul>\\n        </div>\\n        </div>\\n        <router-outlet></router-outlet>\\n    </div>\\n    </div>\\n  </div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'test';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { UserPostComponent } from './components/user-post/user-post.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ReviewsService } from './services/reviews/reviews.service'\nimport { UserService } from './services/user/user.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    UserPostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [ReviewsService, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Bookz In Da Club</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li ngbDropdown class=\\\"nav-item dropdown\\\">\\n        <span ngbDropdownToggle class=\\\"nav-link dropdown-toggle\\\" id=\\\"dropdown01\\\">Dropdown</span>\\n        <div ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown01\\\">\\n          <a *ngIf=\\\"currentUser\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/login\\\">Login</a>\\n          <a *ngIf=\\\"currentUser\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/register\\\">Register</a>\\n          <a *ngIf=\\\"currentUser\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/\\\">My Profile</a>\\n          <a *ngIf=\\\"currentUser\\\" class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1wb3N0L3VzZXItcG9zdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card my-5\\\">\\n  <div class=\\\"card-body\\\">\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead class=\\\"thead-dark\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">User Id</th>\\n          <th scope=\\\"col\\\">Book Id</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Rating</th>\\n          <th scope=\\\"col\\\">Date</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n        <tr *ngFor=\\\"let review of reviews\\\">\\n          <td>{{ review.userId }}</td>\\n          <td>{{ review.bookId }}</td>\\n          <td>{{ review.reviewDescription }}</td>\\n          <td>{{ review.rating }}</td>\\n          <td>{{ review.reviewDate }}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Review } from '../../models/review';\nimport { ReviewsService } from 'src/app/services/reviews/reviews.service';\n\n@Component({\n  selector: 'app-user-post',\n  templateUrl: './user-post.component.html',\n  styleUrls: ['./user-post.component.css']\n})\nexport class UserPostComponent implements OnInit {\n\n  reviews: Review[];\n  constructor(private reviewService: ReviewsService) { }\n\n  ngOnInit() {\n    this.reviewService.getAll().subscribe(data => {\n      this.reviews = data;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Review } from '../../models/review';\nimport { environment as envir } from '../../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewsService {\n\n  constructor( private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<Review[]>(`${envir.baseUrl}/review/reviews`);\n  }\n\n  getById() {\n    return this.http.get<Review>(`${envir.baseUrl}/review/review`);\n  }\n\n  save( review: Review ) {\n    this.http.post<Review>(`${envir.baseUrl}/review/save`, review);\n  }\n\n  update( review: Review ) {\n    this.http.put<Review>(`${envir.baseUrl}/review/update`, review);\n  }\n\n  delete( review: Review ) {\n    this.http.delete<Review>(`${envir.baseUrl}/review/delete`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment as envir } from '../../../environments/environment';\nimport { User } from '../../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor( private http: HttpClient ) { }\n\n  getAll() {\n    return this.http.get<User[]>(`${envir.baseUrl}/user/users`);\n  }\n\n  getById() {\n    return this.http.get<User>(`${envir.baseUrl}/user/user`);\n  }\n\n  save(user: User) {\n    this.http.post<User>(`${envir.baseUrl}/user/save`, user);\n  }\n\n  update(user: User) {\n    this.http.put<User>(`${envir.baseUrl}/user/update`, user);\n  }\n\n  delete(user: User) {\n    this.http.delete<User>(`${envir.baseUrl}/user/delete`);\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n//Mock data with JSON-SERVER\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}